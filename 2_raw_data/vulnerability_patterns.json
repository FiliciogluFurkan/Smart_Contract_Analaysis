{
  "reentrancy": {
    "keywords": [
      "call.value",
      "call()",
      "send()",
      "transfer() after state change"
    ],
    "code_patterns": [
      "call.value()()",
      "address.call.value",
      "external call before state update"
    ],
    "description": "External calls before state updates allow recursive exploitation (ContractFuzzer Tespiti)."
  },
  "delegatecall": {
    "keywords": [
      "delegatecall",
      "delegatecall to untrusted",
      "delegatecall and storage hijacking"
    ],
    "code_patterns": [
      "delegatecall(",
      "address.delegatecall"
    ],
    "description": "Delegatecall to untrusted contracts can hijack storage (Dangerous DelegateCall / ContractFuzzer Tespiti)."
  },
  "unchecked_return": {
    "keywords": [
      "call without check",
      "send without check",
      "address.call return value ignored"
    ],
    "code_patterns": [
      "address.call(",
      "address.send(",
      "without checking return"
    ],
    "description": "Not checking return values can hide failures. İlişkili: ContractFuzzer'daki Exception Disorder (istisna bozukluğu)."
  },
  "timestamp_dependency": {
    "keywords": [
      "block.timestamp",
      "now",
      "block.number",
      "randomness dependency"
    ],
    "code_patterns": [
      "if(block.timestamp > some_value)",
      "require(block.number % N == 0)",
      "critical decision using block.timestamp"
    ],
    "description": "Critical operations relying on block.timestamp or block.number are vulnerable to miner manipulation (ContractFuzzer Tespiti: Timestamp/Block Number Dependency)."
  },
  "gasless_send": {
    "keywords": [
      "send limited gas",
      "address.send",
      "2300 gas limit",
      "out-of-gas error in fallback"
    ],
    "code_patterns": [
      "address.send(",
      "msg.value.transfer("
    ],
    "description": "Ether transfer using a limited gas amount (2300) might cause the receiver's fallback function to run out of gas, leading to hidden failures (ContractFuzzer Tespiti)."
  },
  "freezing_ether": {
    "keywords": [
      "selfdestruct",
      "suicide",
      "delegatecall selfdestruct",
      "ether locked"
    ],
    "code_patterns": [
      "selfdestruct(",
      "address.delegatecall(...).selfdestruct("
    ],
    "description": "Unprotected selfdestruct or selfdestruct in a delegatecall chain can destroy contracts or lock funds permanently (ContractFuzzer Tespiti: Freezing Ether)."
  },
  "tx_origin": {
    "keywords": [
      "tx.origin",
      "tx.origin authentication"
    ],
    "code_patterns": [
      "require(tx.origin == owner)",
      "if(tx.origin"
    ],
    "description": "Using tx.origin for authentication is vulnerable to phishing."
  },
  "overflow": {
    "keywords": [
      "overflow",
      "underflow",
      "integer overflow"
    ],
    "code_patterns": [
      "uint addition",
      "uint subtraction without SafeMath"
    ],
    "description": "Integer overflow/underflow before Solidity 0.8.0."
  },
  "honeypot": {
    "keywords": [
      "hidden owner",
      "onlyOwner sell",
      "transfer restriction"
    ],
    "code_patterns": [
      "require(msg.sender == owner) in transfer",
      "hidden ownership"
    ],
    "description": "Mechanisms that prevent users from selling tokens."
  }
}